========= STATS GATHERED =========
Methods processed: 30268
Total behaviors: 54988
Successful behaviors: 15399
Failing behaviors: 39589
	Symbol solver Failures: 30503
		Method Failures: 30302
		Other Failures: 201
	Uncovered Statement Failures: 3768
	Unresolved Parameter Failures: 5318
Total postconditions: 260769
Total preconditions: 23392
	 Null checks: 4670
Total amount of Null checks: 125728
Preconditions per method: 
Mean: 0,386 Min: 0,000 Median: 0,000 Max: 1692,000 Standard Deviation: 9,149 
Postconditions per method: 
Mean: 8,615 Min: 0,000 Median: 0,000 Max: 22701,000 Standard Deviation: 165,202 
Null checks per method 
Mean: 0,154 Min: 0,000 Median: 0,000 Max: 279,000 Standard Deviation: 3,619 
Behaviors per method: 
Mean: 0,509 Min: 0,000 Median: 0,000 Max: 564,000 Standard Deviation: 4,069 
Preconditions per behavior: 
Mean: 0,760 Min: 0,000 Median: 0,000 Max: 66,000 Standard Deviation: 1,592 
Postconditions per behavior: 
Mean: 16,934 Min: 0,000 Median: 9,000 Max: 300,000 Standard Deviation: 22,850 
Null checks per behavior: 
Mean: 0,303 Min: 0,000 Median: 0,000 Max: 66,000 Standard Deviation: 1,395 
==================================


===========INTERESTING METHODS===========
======== 695 found ========

/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java --> public void onResumeGLSurfaceView()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java --> public void requestRendering()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java --> void pause()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java --> public void onPauseGLSurfaceView()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public void setCursorPosition(int x, int y)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public float getAccelerometerY()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getDeltaX()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public float getGyroscopeX()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isTouched(int pointer)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isTouched()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getY(int pointer)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getY()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public InputProcessor getInputProcessor()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public void setCatchMenuKey(boolean catchMenu)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public synchronized boolean isKeyPressed(int key)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public void setInputProcessor(InputProcessor processor)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public float getAccelerometerX()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isCatchMenuKey()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean justTouched()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isButtonPressed(int button)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public void setCursorCatched(boolean catched)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public synchronized boolean isKeyJustPressed(int key)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getDeltaX(int pointer)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getDeltaY(int pointer)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public float getGyroscopeY()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isCursorCatched()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public Orientation getNativeOrientation()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getDeltaY()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getX()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public void setCatchBackKey(boolean catchBack)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isCatchBackKey()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public float getGyroscopeZ()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> void registerSensorListeners()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public float getAccelerometerZ()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public int getX(int pointer)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public long getCurrentEventTime()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java --> public boolean isPeripheralAvailable(Peripheral peripheral)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java --> private int toGdxButton(int button)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18.java --> private static String getErrorString(int error)
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18.java --> public boolean createSurface()
/libgdx-master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18.java --> public boolean tryAcquireEglContextLocked(GLThread thread)
/libgdx-master/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGraphics.java --> void frameStart(long time)
/libgdx-master/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java --> private int toGdxButton(int button)
/libgdx-master/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java --> public static int getGdxKeyCode(int lwjglKeyCode)
/libgdx-master/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java --> public static int getJglfwKeyCode(int gdxKeyCode)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OggInputStream.java --> public int read()
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALMusic.java --> public boolean isPlaying()
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration.java --> public void setFromDisplayMode(DisplayMode mode)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java --> void setGlobals()
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTInput.java --> protected static int translateKeyCode(int keyCode)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTInput.java --> private int toGdxButton(int swingButton)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTInput.java --> public synchronized boolean isKeyJustPressed(int key)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTInput.java --> public synchronized boolean isKeyPressed(int key)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java --> public static int getLwjglKeyCode(int gdxKeyCode)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java --> private int toGdxButton(int button)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java --> public static int getGdxKeyCode(int lwjglKeyCode)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java --> public boolean isKeyJustPressed(int key)
/libgdx-master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java --> private int toLwjglButton(int button)
/libgdx-master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/audio/OggInputStream.java --> public int read()
/libgdx-master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/audio/OpenALMusic.java --> public boolean isPlaying()
/libgdx-master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Input.java --> static char characterForKeyCode(int key)
/libgdx-master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Input.java --> public static int getGlfwKeyCode(int gdxKeyCode)
/libgdx-master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Input.java --> public boolean isKeyJustPressed(int key)
/libgdx-master/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Input.java --> public static int getGdxKeyCode(int lwjglKeyCode)
/libgdx-master/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSGraphics.java --> public void setContinuousRendering(boolean isContinuous)
/libgdx-master/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSInput.java --> public boolean isPeripheralAvailable(Peripheral peripheral)
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java --> public void setContinuousRendering(boolean isContinuous)
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public int getRotation()
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public Orientation getNativeOrientation()
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> private void setupCompass()
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public float getPitch()
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public float getAzimuth()
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public float getRoll()
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public void getRotationMatrix(float[] matrix)
/libgdx-master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java --> public boolean isPeripheralAvailable(Peripheral peripheral)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToTranslationAndScaling(float translationX, float translationY, float translationZ, float scalingX, float scalingY, float scalingZ)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToProjection(float near, float far, float fovy, float aspectRatio)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToOrtho(float left, float right, float bottom, float top, float near, float far)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Vector3 getScale(Vector3 scale)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 set(float translationX, float translationY, float translationZ, float quaternionX, float quaternionY, float quaternionZ, float quaternionW, float scaleX, float scaleY, float scaleZ)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 set(float translationX, float translationY, float translationZ, float quaternionX, float quaternionY, float quaternionZ, float quaternionW)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToProjection(float left, float right, float bottom, float top, float near, float far)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 inv()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/BufferUtils.java --> public static void copy(Buffer src, Buffer dst, int numElements)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Utf8Decoder.java --> private void decode(byte b)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/File.java --> public boolean isAbsolute()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/File.java --> public File getCanonicalFile()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/File.java --> public File getAbsoluteFile()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/RandomAccessFile.java --> public void close() throws IOException
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/Locale.java --> public Locale(String language, String country, String variant)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/Locale.java --> public boolean equals(Object object)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/StringTokenizer.java --> public Object nextElement()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/StringTokenizer.java --> public String nextToken(String delims)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void setCursorPosition(int x, int y)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getX()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getDeltaX()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void vibrate(long[] pattern, int repeat)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void vibrate(int milliseconds)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getAccelerometerY()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getY(int pointer)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public InputProcessor getInputProcessor()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getGyroscopeX()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void cancelVibrate()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getGyroscopeZ()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean justTouched()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getDeltaX(int pointer)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getDeltaY(int pointer)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isKeyPressed(int key)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void setCatchMenuKey(boolean catchMenu)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getPitch()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void setCatchBackKey(boolean catchBack)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getDeltaY()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isTouched(int pointer)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> private int getButton(int button)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getRoll()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isPeripheralAvailable(Peripheral peripheral)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getAccelerometerX()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getAccelerometerZ()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getX(int pointer)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isTouched()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getY()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getGyroscopeY()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void setOnscreenKeyboardVisible(boolean visible)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> void reset()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public int getRotation()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> private static int keyForCode(int keyCode)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public float getAzimuth()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void setInputProcessor(InputProcessor processor)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public long getCurrentEventTime()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isCatchMenuKey()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isCatchBackKey()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public Orientation getNativeOrientation()
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public boolean isKeyJustPressed(int key)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java --> public void getRotationMatrix(float[] matrix)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java --> private String toStorageKey(String key, Object value)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java --> public Writer writer(boolean append, String charset)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java --> public OutputStream write(boolean append)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java --> private static void copyDirectory(FileWrapper sourceDir, FileWrapper destDir)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Field.java --> Field(String name, Class enclosingType, Class type, boolean isFinal, boolean isDefaultAccess, boolean isPrivate, boolean isProtected, boolean isPublic, boolean isStatic, boolean isTransient, boolean isVolatile, int getter, int setter, Class[] elementTypes, Annotation[] annotations)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Method.java --> boolean match(Class... types)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/ReflectionCache.java --> public static Type getType(Class clazz)
/libgdx-master/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java --> private String cast(String paramType, String arg)
/libgdx-master/backends/gdx-backends-gwt/src/com/google/gwt/webgl/client/WebGLRenderingContext.java --> protected WebGLRenderingContext()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/Manifold.java --> public ManifoldType getType()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/collision/broadphase/DynamicTreeFlatNodes.java --> private int balance(int iA)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/collision/Distance.java --> public void writeCache(SimplexCache cache)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/collision/shapes/ChainShape.java --> public void getChildEdge(EdgeShape edge, int index)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/collision/shapes/PolygonShape.java --> public final boolean raycast(RayCastOutput output, RayCastInput input, Transform xf, int childIndex)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/common/Mat22.java --> public boolean equals(Object obj)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/common/Mat33.java --> public boolean equals(Object obj)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/common/MathUtils.java --> public static final float sinLUT(float x)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public void setAwake(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public final void applyForceToCenter(Vec2 force)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public void setFixedRotation(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public final void applyForce(Vec2 force, Vec2 point)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public final void applyLinearImpulse(Vec2 impulse, Vec2 point, boolean wake)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public boolean shouldCollide(Body other)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public final void setBullet(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public void applyAngularImpulse(float impulse)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public final void setAngularVelocity(float w)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public final void applyTorque(float torque)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Body.java --> public void setSleepingAllowed(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/Island.java --> public void init(int bodyCapacity, int contactCapacity, int jointCapacity, ContactListener listener)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setWarmStarting(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public int getParticleContactCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public int getBodyCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setAutoClearForces(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public ContactManager getContactManager()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public Body getBodyList()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setContactFilter(ContactFilter filter)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean isContinuousPhysics()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public Vec2 getGravity()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> private void drawShape(Fixture fixture, Transform xf, Color3f color, boolean wireframe)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public DestructionListener getDestructionListener()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public ParticleDestructionListener getParticleDestructionListener()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public Joint getJointList()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean isSubStepping()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public Profile getProfile()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean isAllowSleep()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setContactListener(ContactListener listener)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public int getParticleBodyContactCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public Contact getContactList()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean isSleepingAllowed()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setDestructionListener(DestructionListener listener)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean isLocked()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setDebugDraw(DebugDraw debugDraw)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean getAutoClearForces()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public ParticleBodyContact[] getParticleBodyContacts()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void destroyBody(Body body)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setContinuousPhysics(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setSleepingAllowed(boolean sleepingAllowed)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public ParticleContact[] getParticleContacts()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setParticleDestructionListener(ParticleDestructionListener listener)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public IWorldPool getPool()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setSubStepping(boolean subStepping)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public int getContactCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public void setAllowSleep(boolean flag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public Body createBody(BodyDef def)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public boolean isWarmStarting()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics/World.java --> public int getJointCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public boolean equals(Object obj)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> float getCriticalVelocity(final TimeStep step)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public ParticleSystem(World world)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> private static final int upperBound(Proxy[] ray, int length, long tag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> void solveViscous(final TimeStep step)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void solveWall(TimeStep step)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> void setParticleBuffer(ParticleBufferInt buffer, int[] newData, int newCapacity)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void destroyParticle(int index, boolean callDestructionListener)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> float getParticleMass()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public ParticleGroup[] getParticleGroupList()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public int getParticleGroupCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void setParticleDamping(float damping)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> float getParticleInvMass()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> void solveDamping(TimeStep step)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void setParticleMaxCount(int count)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> static int limitCapacity(int capacity, int maxCount)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> void solveSpring(final TimeStep step)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public float getParticleRadius()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> static long computeRelativeTag(long tag, int x, int y)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> T[] requestParticleBuffer(Class<T> klass, T[] buffer)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void setParticleDensity(float density)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public int getParticleMaxCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> private static final int lowerBound(Proxy[] ray, int length, long tag)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void setParticleGravityScale(float gravityScale)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public float computeParticleCollisionEnergy()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> float getParticleStride()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public float getParticleGravityScale()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void addContact(int a, int b)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public int[] getParticleFlagsBuffer()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public float getParticleDamping()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> void setParticleBuffer(ParticleBuffer<T> buffer, T[] newData, int newCapacity)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> float[] requestParticleBuffer(float[] buffer)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public float getParticleDensity()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public int getParticleCount()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> void solveElastic(final TimeStep step)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public Vec2[] getParticlePositionBuffer()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public ParticleGroup[] getParticleGroupBuffer()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public Vec2[] getParticleVelocityBuffer()
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> public void setParticleRadius(float radius)
/libgdx-master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java --> static long computeTag(float x, float y)
/libgdx-master/extensions/gdx-controllers/gdx-controllers-android/src/com/badlogic/gdx/controllers/android/AndroidController.java --> public PovDirection getPov(int povIndex)
/libgdx-master/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisJoystick.java --> public OisPov getPov(int povIndex)
/libgdx-master/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeType.java --> private static int encode(char a, char b, char c, char d)
/libgdx-master/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeType.java --> public static int toInt(int value)
/libgdx-master/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java --> private int getLoadingFlags(FreeTypeFontParameter parameter)
/libgdx-master/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntPathMatcher.java --> private boolean matchStrings(String pattern, String str)
/libgdx-master/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java --> private String getSharedLibFilename(TargetOs os, boolean is64Bit, String sharedLibName)
/libgdx-master/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java --> public BuildTarget(BuildTarget.TargetOs targetType, boolean is64Bit, String[] cIncludes, String[] cExcludes, String[] cppIncludes, String[] cppExcludes, String[] headerDirs, String compilerPrefix, String cFlags, String cppFlags, String linkerFlags)
/libgdx-master/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java --> public static BuildTarget newDefaultTarget(BuildTarget.TargetOs type, boolean is64Bit)
/libgdx-master/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/FileDescriptor.java --> public void copyTo(FileDescriptor dest)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java --> public static void main(String[] args)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/flame/DynamicsInfluencerPanel.java --> private DynamicsModifier createVelocityValue(Object selectedItem)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/flame/DynamicsInfluencerPanel.java --> private Object[] getAvailableVelocities(ControllerType type)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/flame/EffectPanel.java --> public T createDefaultEmitter(ControllerType type, boolean select, boolean add)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/flame/FlameMain.java --> protected JPanel getPanel(ParticleBatch renderer)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/flame/FlameMain.java --> protected JPanel getPanel(Influencer influencer)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/flame/SpawnInfluencerPanel.java --> private Object spawnShapeToString(SpawnShapeValue spawnShapeValue)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/Hiero.java --> public void stateChanged(ChangeEvent evt)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/Hiero.java --> public void actionPerformed(ActionEvent evt)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/Hiero.java --> public boolean equals(Object obj)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/Hiero.java --> void saveBm(File file)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/unicodefont/effects/EffectUtil.java --> public static String toString(Color color)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/unicodefont/UnicodeFont.java --> public boolean loadGlyphs()
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/unicodefont/UnicodeFont.java --> public String getFontFile()
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/unicodefont/UnicodeFont.java --> public void setRenderType(RenderType renderType)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/MaxRectsPacker.java --> private int contactPointScoreNode(int x, int y, int width, int height)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java --> public boolean equals(Object obj)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java --> public String getScaledPackFileName(String packFileName, int scaleIndex)
/libgdx-master/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java --> private String getRepeatValue()
/libgdx-master/gdx/src/com/badlogic/gdx/files/FileHandle.java --> private static void copyDirectory(FileHandle sourceDir, FileHandle destDir)
/libgdx-master/gdx/src/com/badlogic/gdx/files/FileHandle.java --> public FileHandle[] list(FilenameFilter filter)
/libgdx-master/gdx/src/com/badlogic/gdx/files/FileHandle.java --> public OutputStream write(boolean append)
/libgdx-master/gdx/src/com/badlogic/gdx/files/FileHandle.java --> public Writer writer(boolean append, String charset)
/libgdx-master/gdx/src/com/badlogic/gdx/files/FileHandle.java --> public FileHandle[] list(FileFilter filter)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color sub(float r, float g, float b, float a)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color(float r, float g, float b, float a)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color add(Color color)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color set(float r, float g, float b, float a)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color mul(Color color)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color mul(float value)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color sub(Color color)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color clamp()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public boolean equals(Object o)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color add(float r, float g, float b, float a)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color mul(float r, float g, float b, float a)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color lerp(final Color target, final float t)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/Color.java --> public Color lerp(final float r, final float g, final float b, final float a, final float t)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java --> public int getKeyFrameIndex(float stateTime)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java --> public void setKerning(int ch, int value)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java --> public int getKerning(char ch)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java --> public boolean isWhitespace(char c)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java --> public void setGlyph(int ch, Glyph glyph)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java --> public boolean isBreakChar(char c)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java --> public Glyph getGlyph(char ch)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java --> private void requirePageGlyphs(int page, int glyphCount)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java --> private void addGlyph(Glyph glyph, float x, float y, float color)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/CpuSpriteBatch.java --> private void drawAdjustedUV(Texture texture, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation, float u, float v, float u2, float v2, boolean flipX, boolean flipY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/CpuSpriteBatch.java --> private void drawAdjusted(TextureRegion region, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation, boolean clockwise)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java --> public String getFormatString()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java --> public static int toGlFormat(int format)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java --> public static int toGlType(int format)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java --> public float getPadBottom()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java --> public float getPadLeft()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java --> public float getPadRight()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java --> public void scale(float scaleX, float scaleY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java --> public float getPadTop()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java --> private void set(int idx, float x, float y, float width, float height, float color)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> private void initialize()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public String getName()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getVelocity()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setPremultipliedAlpha(boolean premultipliedAlpha)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getScale()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setContinuous(boolean continuous)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setAligned(boolean aligned)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void reset()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setFlip(boolean flipX, boolean flipY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public String getImagePath()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setMinParticleCount(int minParticleCount)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> private void restart()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public RangedNumericValue getYOffsetValue()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> protected Particle newParticle(Sprite sprite)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getSpawnHeight()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void flipY()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void addParticle()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public RangedNumericValue getDelay()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean cleansUpBlendFunction()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void allowCompletion()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void start()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getAngle()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getEmission()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> private boolean updateParticle(Particle particle, float delta, int deltaMillis)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getGravity()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public SpawnShapeValue getSpawnShape()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isComplete()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setImagePath(String imagePath)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isBehind()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isPremultipliedAlpha()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getRotation()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public RangedNumericValue getXOffsetValue()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isAttached()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setMaxParticleCount(int maxParticleCount)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public Sprite getSprite()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isAdditive()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public int getMinParticleCount()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setPosition(float x, float y)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> protected Particle[] getParticles()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setCleansUpBlendFunction(boolean cleansUpBlendFunction)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public int getMaxParticleCount()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getSpawnWidth()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getTransparency()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setAttached(boolean attached)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> static String readString(String line) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setBehind(boolean behind)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isContinuous()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setAdditive(boolean additive)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public float getY()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public float getPercentComplete()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getLifeOffset()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getWind()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public boolean isAligned()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void setName(String name)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public GradientColorValue getTint()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ScaledNumericValue getLife()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public ParticleEmitter()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public int getActiveCount()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public void update(float delta)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public RangedNumericValue getDuration()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java --> public float getX()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSprite.java --> public Rectangle getBoundingRectangle()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSprite.java --> public void draw(PolygonSpriteBatch spriteBatch)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(TextureRegion region, float width, float height, Affine2 transform)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(Texture texture, float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(TextureRegion region, float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(TextureRegion region, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation, boolean clockwise)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(TextureRegion region, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(Texture texture, float x, float y, float width, float height, float u, float v, float u2, float v2)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(Texture texture, float x, float y, int srcX, int srcY, int srcWidth, int srcHeight)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(Texture texture, float x, float y, float width, float height, int srcX, int srcY, int srcWidth, int srcHeight, boolean flipX, boolean flipY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java --> public void draw(Texture texture, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation, int srcX, int srcY, int srcWidth, int srcHeight, boolean flipX, boolean flipY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java --> public void setBounds(float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java --> public float[] getVertices()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java --> public void setSize(float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(TextureRegion region, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation, boolean clockwise)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(Texture texture, float x, float y, int srcX, int srcY, int srcWidth, int srcHeight)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(TextureRegion region, float width, float height, Affine2 transform)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(TextureRegion region, float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(Texture texture, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation, int srcX, int srcY, int srcWidth, int srcHeight, boolean flipX, boolean flipY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(Texture texture, float x, float y, float width, float height, float u, float v, float u2, float v2)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(TextureRegion region, float x, float y, float originX, float originY, float width, float height, float scaleX, float scaleY, float rotation)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(Texture texture, float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java --> public void draw(Texture texture, float x, float y, float width, float height, int srcX, int srcY, int srcWidth, int srcHeight, boolean flipX, boolean flipY)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/Attributes.java --> public final boolean same(final Attributes other, boolean compareValues)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/Attributes.java --> public int compareTo(Attributes other)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java --> public void setTextureRegion(TextureRegion textureRegion)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java --> protected void update()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java --> protected void resetVertices()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/BillboardParticleBatch.java --> public void setAlignMode(AlignMode mode)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/BillboardParticleBatch.java --> public void setVertexData()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/particles/emitters/RegularEmitter.java --> public void update()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java --> public void update()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java --> public void activateParticles(int startIndex, int count)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> private static final boolean and(final long mask, final long flag)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public int getDefaultCullFace()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public int getDefaultDepthFunc()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public int compareTo(Shader other)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> private static final boolean or(final long mask, final long flag)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public void setDefaultCullFace(int cullFace)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public static String getDefaultVertexShader()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public static String getDefaultFragmentShader()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public void setDefaultDepthFunc(int depthFunc)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> private static final long combineAttributeMasks(final Renderable renderable)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java --> public boolean equals(DefaultShader obj)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/utils/CameraInputController.java --> public boolean keyUp(int keycode)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/utils/CameraInputController.java --> public boolean keyDown(int keycode)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java --> public short vertex(Vector3 pos, Vector3 nor, Color col, Vector2 uv)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/g3d/utils/TextureDescriptor.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/glutils/GLVersion.java --> public GLVersion(Application.ApplicationType appType, String versionString, String vendorString, String rendererString)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/glutils/ImmediateModeRenderer20.java --> private static String createFragmentShader(boolean hasNormals, boolean hasColors, int numTexCoords)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/profiling/GLProfiler.java --> public static void disable()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/VertexAttribute.java --> public int getSizeInBytes()
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java --> public boolean equals(final Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java --> public int compareTo(VertexAttributes o)
/libgdx-master/gdx/src/com/badlogic/gdx/input/RemoteInput.java --> public void run()
/libgdx-master/gdx/src/com/badlogic/gdx/input/RemoteInput.java --> public boolean isKeyJustPressed(int key)
/libgdx-master/gdx/src/com/badlogic/gdx/input/RemoteInput.java --> public boolean isKeyPressed(int key)
/libgdx-master/gdx/src/com/badlogic/gdx/input/RemoteInput.java --> public boolean isPeripheralAvailable(Peripheral peripheral)
/libgdx-master/gdx/src/com/badlogic/gdx/Input.java --> public static String toString(int keycode)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Bresenham2.java --> public Array<GridPoint2> line(int startX, int startY, int endX, int endY, Pool<GridPoint2> pool, Array<GridPoint2> output)
/libgdx-master/gdx/src/com/badlogic/gdx/math/DelaunayTriangulator.java --> private int circumCircle(float xp, float yp, float x1, float y1, float x2, float y2, float x3, float y3)
/libgdx-master/gdx/src/com/badlogic/gdx/math/GeometryUtils.java --> public static float triangleCircumradius(float x1, float y1, float x2, float y2, float x3, float y3)
/libgdx-master/gdx/src/com/badlogic/gdx/math/GeometryUtils.java --> public static float lowestPositiveRoot(float a, float b, float c)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectRayTriangles(Ray ray, float[] vertices, short[] indices, int vertexSize, Vector3 intersection)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean overlaps(Circle c, Rectangle r)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectLines(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, Vector2 intersection)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectLines(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 intersection)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean isPointInTriangle(float px, float py, float ax, float ay, float bx, float by, float cx, float cy)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectSegments(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, Vector2 intersection)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectSegments(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 intersection)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectRayBoundsFast(Ray ray, Vector3 center, Vector3 dimensions)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean isPointInTriangle(Vector2 p, Vector2 a, Vector2 b, Vector2 c)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static boolean intersectRayTriangles(Ray ray, float[] triangles, Vector3 intersection)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Intersector.java --> public static float intersectRayRay(Vector2 start1, Vector2 direction1, Vector2 start2, Vector2 direction2)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static float clamp(float value, float min, float max)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static double clamp(double value, double min, double max)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static long clamp(long value, long min, long max)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static short clamp(short value, short min, short max)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static float randomTriangular(float min, float max, float mode)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static int clamp(int value, int min, int max)
/libgdx-master/gdx/src/com/badlogic/gdx/math/MathUtils.java --> public static float atan2(float y, float x)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToTranslationAndScaling(float translationX, float translationY, float translationZ, float scalingX, float scalingY, float scalingZ)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToOrtho(float left, float right, float bottom, float top, float near, float far)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Vector3 getScale(Vector3 scale)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 set(float translationX, float translationY, float translationZ, float quaternionX, float quaternionY, float quaternionZ, float quaternionW, float scaleX, float scaleY, float scaleZ)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToProjection(float near, float far, float fovy, float aspectRatio)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 set(float translationX, float translationY, float translationZ, float quaternionX, float quaternionY, float quaternionZ, float quaternionW)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 setToProjection(float left, float right, float bottom, float top, float near, float far)
/libgdx-master/gdx/src/com/badlogic/gdx/math/Matrix4.java --> public Matrix4 inv()
/libgdx-master/gdx/src/com/badlogic/gdx/math/Quaternion.java --> public Quaternion setFromAxes(boolean normalizeAxes, float xx, float xy, float xz, float yx, float yy, float yz, float zx, float zy, float zz)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public float getX(int alignment)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public void setPosition(float x, float y, int alignment)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public Vector2 localToParentCoordinates(Vector2 localCoords)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public float getY(int alignment)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public Vector2 parentToLocalCoordinates(Vector2 parentCoords)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public void setBounds(float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public void toBack()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java --> public void setOrigin(int alignment)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java --> public void setDebugTableUnderMouse(Debug debugTableUnderMouse)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<A> setActor(A newActor)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> top()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> bottom()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> void merge(Cell cell)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> right()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> space(Value top, Value left, Value bottom, Value right)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> prefSize(Value width, Value height)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public static Cell defaults()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> pad(Value top, Value left, Value bottom, Value right)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> left()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> maxSize(Value width, Value height)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public void setActorBounds(float x, float y, float width, float height)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> minSize(Value width, Value height)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java --> public Cell<T> size(Value width, Value height)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java --> public Container<T> pad(Value top, Value left, Value bottom, Value right)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public ScrollPaneStyle getStyle()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isTopEdge()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getScrollHeight()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setCancelTouchFocus(boolean cancelTouchFocus)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getMaxX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean getVariableSizeKnobs()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> protected void scrollX(float pixelsX)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getScrollWidth()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getScrollX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setClamp(boolean clamp)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getPrefWidth()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setVelocityX(float velocityX)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public Actor getWidget()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getVisualScrollX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getVelocityY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setWidget(Actor widget)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> protected void scrollY(float pixelsY)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getScrollBarHeight()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setVelocityY(float velocityY)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getMaxY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isScrollY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setSmoothScrolling(boolean smoothScrolling)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getVelocityX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isDragging()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setupFadeScrollBars(float fadeAlphaSeconds, float fadeDelaySeconds)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isFlinging()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isForceScrollX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isLeftEdge()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setFlingTime(float flingTime)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getMinWidth()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setScrollingDisabled(boolean x, boolean y)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isScrollingDisabledY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isScrollX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setVariableSizeKnobs(boolean variableSizeKnobs)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setForceScroll(boolean x, boolean y)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isScrollingDisabledX()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getMinHeight()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setOverscroll(boolean overscrollX, boolean overscrollY)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getPrefHeight()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> protected void visualScrollX(float pixelsX)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getScrollBarWidth()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isBottomEdge()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getScrollY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isForceScrollY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setupOverscroll(float distance, float speedMin, float speedMax)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public boolean isRightEdge()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public float getVisualScrollY()
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void setScrollBarPositions(boolean bottom, boolean right)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> public void fling(float flingTime, float velocityX, float velocityY)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java --> protected void visualScrollY(float pixelsY)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java --> public Drawable newDrawable(Drawable drawable)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java --> private float[] ensureSize(float[] array, int size)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java --> public Table pad(Value top, Value left, Value bottom, Value right)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java --> public TextFieldStyle(TextFieldStyle style)
/libgdx-master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java --> boolean withinMaxLength(int size)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/Array.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/Array.java --> public Iterator<T> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ArrayMap.java --> public Entries<K, V> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ArrayMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ArrayMap.java --> public void insert(int index, K key, V value)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ArrayMap.java --> public Iterator<Entry<K, V>> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ArrayMap.java --> public Values<V> values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ArrayMap.java --> public Keys<K> keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/BooleanArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ByteArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/CharArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ComparableTimSort.java --> private static void binarySort(Object[] a, int lo, int hi, int start)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lz/BinTree.java --> public int GetMatches(int[] distances) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lz/InWindow.java --> public int GetMatchLen(int index, int distance, int limit)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lz/InWindow.java --> public void MovePos() throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Base.java --> public static final int StateUpdateChar(int index)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Base.java --> public static final int GetLenToPosState(int len)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> boolean ChangePair(int smallDist, int bigDist)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public void SetEndMarkerMode(boolean endMarkerMode)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> void MovePos(int num) throws java.io.IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public boolean SetMatchFinder(int matchFinderIndex)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public boolean SetLcLpPb(int lc, int lp, int pb)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public Encoder()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> void SetWriteEndMarkerMode(boolean writeEndMarker)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public boolean SetDictionarySize(int dictionarySize)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> int Backward(int cur)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> static int GetPosSlot(int pos)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public void CodeOneBlock(long[] inSize, long[] outSize, boolean[] finished) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public boolean SetAlgorithm(int algorithm)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> void ReleaseStreams()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> void ReleaseMFStream()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> public boolean SetNumFastBytes(int numFastBytes)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java --> static int GetPosSlot2(int pos)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/rangecoder/Decoder.java --> public int DecodeBit(short[] probs, int index) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/compression/rangecoder/Encoder.java --> public void Encode(short[] probs, int index, int symbol) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/DataOutput.java --> public int writeInt(int value, boolean optimizePositive) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/DataOutput.java --> public void writeString(String value) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/FloatArray.java --> public boolean equals(Object object, float epsilon)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/FloatArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public boolean containsValue(Object value, boolean identity)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public Entries<K, V> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public Keys<K> keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public Iterator<Entry<K, V>> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public K findKey(Object value, boolean identity)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public Values<V> values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IdentityMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public Entry next()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> void removeStashIndex(int index)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public Iterator<Entry> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public Entries entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public float get(int key, float defaultValue)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public float getAndIncrement(int key, float defaultValue, float increment)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public int findKey(float value, int notFound)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public boolean containsValue(float value, float epsilon)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public Keys keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public boolean containsKey(int key)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public boolean containsValue(float value)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java --> public Values values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public Entry next()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> void removeStashIndex(int index)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public int getAndIncrement(int key, int defaultValue, int increment)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public Iterator<Entry> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public Entries entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public boolean containsValue(int value)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public int findKey(int value, int notFound)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public int get(int key, int defaultValue)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public Keys keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public boolean containsKey(int key)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntIntMap.java --> public Values values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public Entry<V> next()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public void clear()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public int findKey(Object value, boolean identity, int notFound)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public Iterator<Entry<V>> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public V get(int key, V defaultValue)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public Keys keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> void removeStashIndex(int index)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public V get(int key)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public Values<V> values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public boolean containsValue(Object value, boolean identity)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public boolean containsKey(int key)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntMap.java --> public Entries<V> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntSet.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntSet.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/IntSet.java --> public IntSetIterator iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonValue.java --> public boolean isValue()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonValue.java --> public String trace()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonValue.java --> private void json(JsonValue object, StringBuilder buffer, OutputType outputType)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonValue.java --> private void prettyPrint(JsonValue object, StringBuilder buffer, int indent, PrettyPrintSettings settings)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonWriter.java --> public JsonWriter object(String name) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonWriter.java --> public JsonWriter value(Object value) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/JsonWriter.java --> public JsonWriter array(String name) throws IOException
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public Entry<V> next()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public V get(long key, V defaultValue)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public void clear()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public V get(long key)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public Iterator<Entry<V>> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public Keys keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> void removeStashIndex(int index)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public boolean containsValue(Object value, boolean identity)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public Values<V> values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public long findKey(Object value, boolean identity, long notFound)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public boolean containsKey(long key)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/LongMap.java --> public Entries<V> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java --> public Keys<K> keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java --> public Entries<K> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java --> public Entries<K> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java --> public Values values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java --> public Values values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java --> public Keys<K> keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java --> public Entries<K> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java --> public Entries<K> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public Entries<K, V> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public boolean containsValue(Object value, boolean identity)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public Entries<K, V> entries()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> private String toString(String separator, boolean braces)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public Keys<K> keys()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public K findKey(Object value, boolean identity)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public Values<V> values()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectMap.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectSet.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ObjectSet.java --> public ObjectSetIterator<T> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/Queue.java --> public Iterator<T> iterator()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/Queue.java --> public T removeIndex(int index)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/Queue.java --> public boolean equals(Object o)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java --> public String mapLibraryName(String libraryName)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/ShortArray.java --> public boolean equals(Object object)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public StringBuilder append(CharSequence csq)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public StringBuilder append(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public int indexOf(String subString, int start)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public StringBuilder append(int value, final int minLength, final char prefix)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> final void append0(CharSequence s, int start, int end)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public boolean equals(Object obj)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public StringBuilder append(boolean b)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/StringBuilder.java --> public StringBuilder append(long value, int minLength, char prefix)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/TimSort.java --> private static void binarySort(T[] a, int lo, int hi, int start, Comparator<? super T> c)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/XmlReader.java --> public String toString()
/libgdx-master/gdx/src/com/badlogic/gdx/utils/XmlReader.java --> protected String entity(String name)
/libgdx-master/gdx/src/com/badlogic/gdx/utils/XmlWriter.java --> public XmlWriter text(Object text) throws IOException
/libgdx-master/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/FrustumCullingTest.java --> public boolean tap(float x, float y, int count, int button)
/libgdx-master/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/FreeTypeIncrementalTest.java --> private static boolean legalAtStart(int ch)
/libgdx-master/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/HeightField.java --> protected void setVertex(int index, VertexInfo info)
/libgdx-master/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/voxel/VoxelWorld.java --> public void setColumn(float x, float y, float z, byte voxel)
/libgdx-master/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/voxel/VoxelWorld.java --> public float getHighest(float x, float z)
/libgdx-master/tests/gdx-tests/src/com/badlogic/gdx/tests/InputTest.java --> private String getButtonString(int button)

